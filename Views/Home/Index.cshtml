@{
    ViewData["Title"] = "Home Page";
    var Settings = ViewData["Organizations"] as List<UserSettings>;
    
}



 <div class="container-fluid">
     <div class="col-md-4" style="padding-left:50px;padding-right:50px;">
         <div class="row">
             <div id="default" style='padding-top:75px;'>
                 <select id="authenicationTypes">
                     <option value="true">Basic Authenication</option>
                     <option value="false">Access Token</option>
                 </select>
             </div>
         </div>
         <div class="row RowDistance">
             <input id="Instance" />
         </div>
         <div class="row RowDistance" style="display:none" id="TokenType">
             <input id="Token" />
         </div>
         <div class="row RowDistance" id="BasicAuth">
             <div>
                 <input id="Username" />
             </div>
             <div style="margin-top:10px;">
                 <input id="Password" />
             </div>

         </div>
         <div class="row RowDistance">
             <button id="AuthenicateBtn" style=" width: 100%;" onclick="Authenicate()" class="e-control e-btn e-lib e-primary">Authenicate</button>
         </div>

         <div class="row RowDistance">
             <h3 style="text-align:center">
                 How to authenicate?
             </h3>
         </div>

         <div class="row RowDistance">
             First you need to setup the endpoint of the instnace that you want to connect to. If you're using our online services please use <span style="font-weight:bold">https://portal.concoctcloud.com</span>, if you're using a licensed server for your organization your can use the default endpoint that the server is running at.
         </div>


         <div class="row RowDistance">
             <p>There are two options to authenicate, using the basic authenication mode and acess token mode. Basic which is disabled by default in most projects unless your system administrator has enabled the option. If you're trying to enabled the mode please go into <span style="font-weight:bold">API Key Integration -> Concoct Integration -> Enabled Basic Auth</span></p>
         </div>

         <div class="row RowDistance">
             <p>There is no need to set up multiple users when authenicating with the cloud, once the account has been authorized it will sync all active organizations that it participates under and all projects/work items that are under those organizations.</p>
         </div>
         <div class="row RowDistance">
             The application will sync on a regular basis when there is a stable connection to keep up to date but you can force it to connect to the cloud instance and clone new work either by clicking load layouts with a selected organization or starting a new layout
         </div>


     </div>
     <div class="col-md-8" style="padding-right: 50px; border-left: 3px solid #ff6767; padding-left: 31px; height: 100vh;">
        
         <div class="row " style="min-height: 90vh; max-height: 90vh; ">
             <div class="organizationContiner">
                 @foreach (var item in Settings)
                 {
                     if (item.IsActive == 1)
                     {
                         <div class="row orgRowActive" id="Id_@item.Id" onclick="SelectRow(@item.Id)">
                             <div class="col-sm-3" style="text-align:center">
                                 <img src="https://media.istockphoto.com/vectors/no-image-vector-symbol-missing-available-icon-no-gallery-for-this-vector-id1128826884?b=1&k=20&m=1128826884&s=170667a&w=0&h=7tmZDF3-85_rT_7luTYWkXydcRF4ZQ0UWIbW4IwX32E=" style=" height: 100px;" />
                             </div>
                             <div class="col-sm-4 orgTextElement">
                                 @item.OrganizationName
                             </div>
                             <div class="col-sm-5 orgTextElement">
                                 @item.InstanceAddress
                             </div>
                         </div>
                     }
                     else
                     {
                        <div class="row orgRow" id="Id_@item.Id" onclick="SelectRow(@item.Id)">
                             <div class="col-sm-3" style="text-align:center">
                                 <img src="https://media.istockphoto.com/vectors/no-image-vector-symbol-missing-available-icon-no-gallery-for-this-vector-id1128826884?b=1&k=20&m=1128826884&s=170667a&w=0&h=7tmZDF3-85_rT_7luTYWkXydcRF4ZQ0UWIbW4IwX32E=" style=" height: 100px;" />
                             </div>
                             <div class="col-sm-4 orgTextElement">
                                 @item.OrganizationName
                             </div>
                             <div class="col-sm-5 orgTextElement" style="word-break:break-all">
                                 @item.InstanceAddress
                             </div>
                        </div>
                     }
                    
                 }
             </div>
         </div>

         <div class="row RowDistance">
             <div class="col-md-5">
                 <button id="LoadLayuouts" style=" width: 100%;" onclick="LoadLayouts()">Load Layout</button>
             </div>
             <div class="col-md-2">

             </div>
             <div class="col-md-5">
                 <button id="NewLayout" onclick="InitNewLayout()" style=" width: 100%;">New Layout</button>
             </div>
         </div>
     </div>
     
 </div>


<script>
    var mode = true;
    var selectedItem = 0;
    var prevItem;

    var elId = "@Settings.FirstOrDefault(x=>x.IsActive == 1).Id";

    prevItem = document.getElementById("Id_" + elId);
    selectedItem = elId;
    // Initialize DropDownList component
    var authenicationTypes = new ej.dropdowns.DropDownList({
        // set the index value to select an item based on index at initial rendering
        index: 0,
        // set the placeholder to DropDownList input element
        placeholder: 'Authenication Type',
        // set the height of the popup element
        popupHeight: '200px',
        // bind the change event
        change: function () { valueChange(); }
    });
    authenicationTypes.appendTo('#authenicationTypes');
    // call the change event's function after initialized the component.
    function valueChange() {
         
        if (authenicationTypes.value === "true") {
            $("#TokenType").hide();
            $("#BasicAuth").show();
            mode = true;
        }
        else {
            $("#TokenType").show();
            $("#BasicAuth").hide();
            mode = false;
        }
    }


    var Instance = new ej.inputs.TextBox({
        placeholder: 'Instance Address',
        cssClass: 'e-outline',
        floatLabelType: 'Auto'
    });
    Instance.appendTo('#Instance');

    var Token = new ej.inputs.TextBox({
        placeholder: 'Access Token',
        cssClass: 'e-outline',
        floatLabelType: 'Auto'
    });
    Token.appendTo('#Token');

    var Username = new ej.inputs.TextBox({
        placeholder: 'Username',
        cssClass: 'e-outline',
        floatLabelType: 'Auto'
    });
    Username.appendTo('#Username');

    var Password = new ej.inputs.TextBox({
        placeholder: 'Password',
        cssClass: 'e-outline',
        floatLabelType: 'Auto'
    });
    Password.appendTo('#Password');

    var LoadLayuouts = new ej.buttons.Button({ isPrimary: true });
    LoadLayuouts.appendTo('#LoadLayuouts');

    var NewLayout = new ej.buttons.Button({ isPrimary: true });
    NewLayout.appendTo('#NewLayout');

    
    function InitNewLayout() {
        window.location.href = "/Dashboard";
    }

    function SelectRow(id) {
        selectedItem = id;

        var dto = {
            Id: selectedItem,
        }

        $.ajax({
            method: "POST",
            contentType: "application/json",
            url: "/Home/SetLayoutActive",
            data: JSON.stringify(dto)
        }).done(function (msg) {
            debugger
            if (prevItem !== undefined) {
                prevItem.setAttribute("class", "row orgRow");
            }

            prevItem = document.getElementById("Id_" + id);
            prevItem.setAttribute("class", "row orgRowActive");
        });
    }

    function LoadLayouts() {
        window.location.href = "/Home/Layouts/" + selectedItem;
    }

    function Authenicate() {
        var token = $("#Token").val();
        var username = $("#Username").val();
        var password = $("#password").val();
        var serverInstance = $("#Instance").val();

        var dto = {
            Token: token,
            Username: username,
            Password: password,
            Instance: serverInstance,
            AuthType:mode
        }

        ShowInfo("Attempting to authenicate!");

        $.ajax({
            method: "POST",
            contentType: "application/json",
            url: "/Home/CCAuthenicationRequest",
            data: JSON.stringify(dto)
        }).done(function (msg) {
            if (msg === "Success") {
                window.location.reload();
            }
            else {
                ShowAlert(msg);
            }
        });

    }
</script>