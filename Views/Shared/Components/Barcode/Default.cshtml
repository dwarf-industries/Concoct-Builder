@{ var UniqueId = Program.GetUniqueId(); }
<style>
    .column-style {
        display: table;
        height: 35px;
        padding-right: 4px;
        padding-left: 0px;
        width: calc((100% - 12px) / 3);
    }

    .row {
        margin-left: 0px;
        margin-right: 0px;
    }

    .row-header {
        font-size: 15px;
        font-weight: 500;
    }

    .labelstyle {
        padding-top: 10px;
        float: left;
        padding-right: 10px
    }

    .propertystyle {
        padding-top: 22px;
        font-weight: 600;
        font-size: 15px;
    }

    .sb-child-row {
        margin-top: 8px;
    }

    .center {
        margin-left: 14px;
        margin-right: 17px;
        margin-top: 14px;
        min-width: 280px;
        width: auto;
        border: 2px solid lightgray;
        min-height: 40%;
        padding-top: 35px;
    }

    .col-lg-4-property-section {
        width: 36%;
    }

    .rightProperty {
        margin-top: 10px;
        width: 16.66666667%;
        float: left;
        position: relative;
        min-height: 1px;
        padding-right: 15px;
        padding-left: 15px;
    }

    .textProperty {
        width: 81%;
        padding-left: 0px;
        padding-right: 0;
        float: left;
        position: relative;
        min-height: 1px;
    }

    .sb-mobile-prop-pane .svgTextClass {
        width: 40px;
        padding-left: 24px;
    }

    .svgTextClass {
        width: 100px;
        float: left;
        position: relative;
        min-height: 1px;
        padding-right: 15px;
        padding-left: 15px;
    }



    .sb-mobile-prop-pane .rightProperty {
        padding-left: 2px;
    }

    .sb-mobile-prop-pane .textPropertyClass {
        padding-left: 30px;
    }

    .sb-mobile-prop-pane .textProperty {
        padding-left: 30px;
        width: 77%
    }

    .textPropertyClass {
        width: 83.33333333%;
        float: left;
        padding-left: 0px;
        position: relative;
        min-height: 1px;
        padding-right: 15px;
    }

    .allowedText {
        margin-left: 14px;
        margin-right: 17px;
        margin-top: 14px;
        width: auto;
        height: auto;
    }

    .errorMessage {
        margin-left: 14px;
        margin-right: 17px;
        margin-top: 14px;
        width: auto;
        height: auto;
    }

    .errorMessage {
        margin-left: 14px;
        margin-right: 17px;
        margin-top: 14px;
        width: auto;
        height: auto;
    }


    .top {
        margin-top: 10px;
    }

    .centercontrol {
        margin: auto;
        width: 50%;
        height: 50%;
    }

    #password-info {
        position: absolute;
        margin-top: 30px;
    }
</style>


<div class="control-section" style="width:100%;height:100%;" id="@UniqueId">
    <div class="contextmenu-control" style="width:100%;height:100%;">
        <div id='contextmenutarget_@UniqueId' style="width:100%;height:100%;">
            <div class="content-wrapper" style="width: 100%;height: 100%;">
                <div>
                    <div class='centercontrol' id="barcode_@UniqueId"></div>
                </div>
            </div>
        </div>
        <ul id='contextmenu_@UniqueId'></ul>
    </div>
</div>




<script>


    var uniqueId = "barcode_@UniqueId";
    var uuid = "@UniqueId";
    function RedRaw(){
        $("#barcode_" + uuid).html("<div id=" + uniqueId + " ></div>");
        Barcode();


        var content = document.getElementById("barcode_" + uuid + "content");
        content.setAttribute("style", "width: 100% !important; height: 100% !important; position: absolute; top: 30% !important;")
    }
    Barcode();

     var menuItems = [
        {
            text: 'Container Selected - Event'
        },
        {
            separator: true
        },
        {
            text: 'Delete'
        },
    ];
    var menuOptions = {
        target: '#contextmenutarget_@UniqueId',
        items: menuItems,
        beforeItemRender: function (args) {
            if (args.item.text === 'Link') {
                args.element.classList.add('e-disabled');
            }
        },
        select: function (args) {
            console.log(args);
            console.log(args.item.properties.text);
            switch (args.item.properties.text) {

                case "Container Selected - Event":
                    ActivateEvent("@UniqueId");
                    break;
                case "Delete":
                    RemoveElement("@UniqueId");
                    break;

            }
        }
    };
    var menuObj = new ej.navigations.ContextMenu(menuOptions, '#contextmenu_@UniqueId');

    function Barcode() {

        //Initializes barcode control
        var barcodeQrCode = new ej.barcodegenerator.QRCodeGenerator({
            width: '100%',
            height: '200px',
            mode: 'SVG',
            type: 'QRCode',
            displayText: { visibility: false },
            value: 'Syncfusion',
        });
        barcodeQrCode.appendTo('#barcode_@UniqueId');
    }

</script>