@{ var UniqueId = Program.GetUniqueId(); }

<style>
    .e-listview:not(.e-list-template) .e-list-item:hover {
        background-color: #f1f1f1;
    }
</style>

<div class="control-section" style="width:100%;height:100%;" id="@UniqueId">
    <div class="contextmenu-control" style="width:100%;height:100%;">
        <div id='contextmenutarget_@UniqueId' style="width:100%;height:100%;">
            <div class="img-fluid" style="width:100%; height:100%">
                <img id="placeholder_@UniqueId"  style="display:none; width:100%;height:100%;" />
                <input type="file" onchange="PlaceHolderChanged"  style="display:none" id="placeholder_file_@UniqueId" />
            </div>
        </div>
        <ul id='contextmenu_@UniqueId'></ul>
    </div>
</div>



<script>
    SetImage();
    var activeId;
    
    var elementOptions = [
        {
            'text': 'On Element Clicked',
            'id': 'Event1',
            'enabled': true,
            'category': 'Events',
            'EventName': "ElementClicked"
        },
        {
            'text': 'Delete',
            'id': 'Option1',
            'enabled': true,
            'category': 'Element Specific',
            'EventName': "RemoveElement"
        },
        {
            'text': 'Upload Image',
            'id': 'Option2',
            'enabled': true,
            'category': 'Element Specific',
            'EventName': "Upload"
        },
        {
            'text': 'Set Background',
            'id': 'Option3',
            'enabled': true,
            'category': 'Element Specific',
            'EventName': "SetBackground"
        },
        {
            'text': 'Enable Scaling',
            'id': 'Option4',
            'enabled': true,
            'category': 'Element Specific',
            'EventName': "Scale"
        },
        {
            'text': 'Close',
            'id': 'Option5',
            'enabled': true,
            'category': 'Element Specific',
            'EventName': "Cancel"
        }
    ];

    function GetElementUUID() {
        return "@UniqueId";
    }

    function GetBindingOptions() {
        return elementOptions;
    }

        function RedRaw() {

        }

        function SetImage(imageData) {
        @*var getElemen = document.getElementById("placeholder_@UniqueId");
        getElemen.setAttribute("src", imageData);*@

            //ContextMenu model definition
            var menuItems = [
                {
                    text: 'Container Selected - Event'
                },
                {
                    separator: true
                },
                {
                    text: 'Delete'
                },
                {
                    text: 'Upload'
                }];
            var menuOptions = {
                target: '#contextmenutarget_@UniqueId',
                items: menuItems,
                beforeItemRender: function (args) {
                    if (args.item.text === 'Link') {
                        args.element.classList.add('e-disabled');
                    }
                },
                select: function (args) {
                    console.log(args);
                    console.log(args.item.properties.text);
                    switch (args.item.properties.text) {

                        case "Container Selected - Event":
                            ActivateEvent("@UniqueId");
                            break;
                        case "Delete":
                            RemoveElement("@UniqueId");
                            break;
                        case "Upload":
                            var getElement;
                            getElement = document.getElementById("placeholder_file_@UniqueId");
                            activeId = "@UniqueId";
                            getElement.type = "file";
                            getElement.click();
                            getElement.onchange = PlaceHolderChanged;
                            break;
                    }
                }
            };


            // Initialize ContextMenu control.
            var menuObj = new ej.navigations.ContextMenu(menuOptions, '#contextmenu_@UniqueId');
        }




        function SetContent(content) {
            var imageElement = document.getElementById("placeholder_@UniqueId");
            imageElement.setAttribute("src", "data:image/jpeg;base64, " + content);
            imageElement.style.setProperty("display", "");
 
        }

        function PlaceHolderChanged(event) {


            var dto = {
                Path: event.path[0].files[0].path,
                Name: event.path[0].files[0].name
            }

            $.ajax({
                method: "POST",
                url: "/Home/ConvertTobase",
                contentType: "application/json",
                data: JSON.stringify(dto)
            }).done(function (args) {
                debugger
                var imageElement = document.getElementById("placeholder_"+ activeId);
                imageElement.setAttribute("src", "data:image/jpeg;base64, " + args);
                imageElement.style.setProperty("display", "");
                console.log(args);
                UpdatePlaceholderContent("@UniqueId", args);
            });

        }


</script>