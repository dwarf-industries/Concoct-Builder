@{ var UniqueId = Program.GetUniqueId(); }

<div class="control-section" style="width:100%;height:100%;" id="@UniqueId">
    <div class="contextmenu-control" style="width:100%;height:100%;">
        <div id='contextmenutarget_@UniqueId' style="width:100%;height:100%;">
            <div class="control-section" id="AreaChart_@UniqueId">
                <div id="area-container_@UniqueId" align="center"></div>
            </div>
        </div>
        <ul id='contextmenu_@UniqueId'></ul>
    </div>
</div>


<style>
    #control-container {
        padding: 0px !important;
    }
</style>

<script>
    var uniqueId = "area-container_@UniqueId";
    var uuid = "@UniqueId";
    function RedRaw(){
        $("#AreaChart_" + uuid).html("<div id=" + uniqueId + " align=\"center\"></div>");
        DrawChart();
    }
    DrawChart();


        var menuItems = [
        {
            text: 'Container Selected - Event'
        },
        {
            separator: true
        },
        {
            text: 'Delete'
        },
        ];
    var menuOptions = {
        target: '#contextmenutarget_@UniqueId',
        items: menuItems,
        beforeItemRender: function (args) {
            if (args.item.text === 'Link') {
                args.element.classList.add('e-disabled');
            }
        },
        select: function (args) {
            console.log(args);
            console.log(args.item.properties.text);
            switch (args.item.properties.text) {

                case "Container Selected - Event":
                    ActivateEvent("@UniqueId");
                    break;
                case "Delete":
                    RemoveElement("@UniqueId");
                    break;

            }
        }
    };
    var menuObj = new ej.navigations.ContextMenu(menuOptions, '#contextmenu_@UniqueId');



    function DrawChart() {


        var chart = new ej.charts.Chart({
        //Initializing Primary X Axis
        primaryXAxis: {
            valueType: 'DateTime',
            labelFormat: 'y',
            majorGridLines: { width: 0 },
            intervalType: 'Years',
            edgeLabelPlacement: 'Shift'
        },
        //Initializing Primary Y Axis
        primaryYAxis: {
            title: 'Revenue in Millions',
            minimum: 2,
            maximum: 5,
            interval: 1,
            lineStyle: { width: 0 },
            majorTickLines: { width: 0 },
            labelFormat: '{value}M'
        },
        chartArea: {
            border: {
                width: 0
            }
        },
        //Initializing Chart Series
        series: [
            {
                type: 'Area',
                dataSource: [{ x: new Date(2000, 0, 1), y: 4 }, { x: new Date(2001, 0, 1), y: 3.0 },
                { x: new Date(2002, 0, 1), y: 3.8 }, { x: new Date(2003, 0, 1), y: 3.4 },
                { x: new Date(2004, 0, 1), y: 3.2 }, { x: new Date(2005, 0, 1), y: 3.9 }],
                xName: 'x', width: 2,
                yName: 'y', name: 'Product A',
                opacity: 0.5, marker: { visible: false }
            },
            {
                type: 'Area',
                dataSource: [{ x: new Date(2000, 0, 1), y: 2.6 }, { x: new Date(2001, 0, 1), y: 2.8 },
                { x: new Date(2002, 0, 1), y: 2.6 }, { x: new Date(2003, 0, 1), y: 3 },
                { x: new Date(2004, 0, 1), y: 3.6 }, { x: new Date(2005, 0, 1), y: 3 }],
                xName: 'x', width: 2,
                yName: 'y', name: 'Product B',
                opacity: 0.5, marker: { visible: false }
            }
        ],
        //Initializing Chart Title
        title: 'Average Sales Comparison',
        width: '100%',

    });
    chart.appendTo('#area-container_@UniqueId');
    }

</script>