@{ var UniqueId = Program.GetUniqueId(); }


<div class="control-section" style="width:100%;height:100%;" id="@UniqueId">
    <div class="contextmenu-control" style="width:100%;height:100%;">
        <div id='contextmenutarget_@UniqueId' style="width:100%;height:100%;">
            <div id="column-container_@UniqueId">
                <select id="games_@UniqueId">
                    <option value="Game1">American Football</option>
                    <option value="Game2">Badminton</option>
                </select>
            </div>
            
        </div>
        <ul id='contextmenu_@UniqueId'></ul>
    </div>
</div>


<script>

    var uniqueId = "inplace_editor_@UniqueId";
    var uuid = "@UniqueId";
    function RedRaw() {
        var items = ` <select id="games_@UniqueId">
                <option value="Game1">American Football</option>
                <option value="Game2">Badminton</option>
            </select>`;
        $("#column-container_" + uuid).html(items);
        DrawDropdown();



    }
    DrawDropdown();


        var menuItems = [
        {
            text: 'Container Selected - Event'
        },
        {
            separator: true
        },
        {
            text: 'Delete'
        },
        ];
    var menuOptions = {
        target: '#contextmenutarget_@UniqueId',
        items: menuItems,
        beforeItemRender: function (args) {
            if (args.item.text === 'Link') {
                args.element.classList.add('e-disabled');
            }
        },
        select: function (args) {
            console.log(args);
            console.log(args.item.properties.text);
            switch (args.item.properties.text) {

                case "Container Selected - Event":
                    ActivateEvent(0);
                    break;
                case "Delete":
                    RemoveElement("@UniqueId");
                    break;

            }
        }
    };
    var menuObj = new ej.navigations.ContextMenu(menuOptions, '#contextmenu_@UniqueId');

    function DrawDropdown() {
        // initialize ComboBox component
        var comboBoxObj = new ej.dropdowns.ComboBox({
            // set the height of the popup element
            popupHeight: '230px',
            // set the index value to select an item based on index at initial rendering
            index: 2,
            // set the placeholder to ComboBox input element
            placeholder: 'Select a game',
            // bind the change event
            change: function () { OnChange("@UniqueId"); }

        });
        comboBoxObj.appendTo('#games_@UniqueId');
    }


</script>