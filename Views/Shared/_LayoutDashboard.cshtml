@{ 
    var Widgets = ViewData["Components"] as List<Widget>;
    var Projects = ViewData["GetProjects"] as List<Projects>;
    var WorkItems = ViewData["GetAllWorkItemsForProjects"] as List<WorkItems>;
    var HideElements = ViewData["HideComponents"] as string;
}

<!doctype html>
<html>
<head>
 
    <script src="~/js/Jquery.js" onload="window.$ = window.jQuery = module.exports;" asp-append-version="true"></script>

    <script src="https://cdn.syncfusion.com/ej2/dist/ej2.min.js" type="text/javascript"></script>
    <link href="~/css/Themes/Light/material.css" id="theme" rel="stylesheet" />
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/css/Shared/Light/_LayoutDashboard.css" id="themeAdjustments" rel="stylesheet" />
    <link href="~/font-awesome-4.7.0/css/font-awesome.css" rel="stylesheet" />

    <link href="~/css/Shared/MainMenu.css" rel="stylesheet" />

    <style>
        b .e-input-group:not(.e-success):not(.e-warning):not(.e-error):not(.e-float-icon-left), .e-input-group.e-float-icon-left:not(.e-success):not(.e-warning):not(.e-error) .e-input-in-wrap, .e-input-group.e-control-wrapper:not(.e-success):not(.e-warning):not(.e-error):not(.e-float-icon-left), .e-input-group.e-control-wrapper.e-float-icon-left:not(.e-success):not(.e-warning):not(.e-error) .e-input-in-wrap, .e-float-input.e-float-icon-left:not(.e-success):not(.e-warning):not(.e-error) .e-input-in-wrap, .e-float-input.e-control-wrapper.e-float-icon-left:not(.e-success):not(.e-warning):not(.e-error) .e-input-in-wrap {
            color:white;
        }
        b .e-input-group .e-input-group-icon, .e-input-group.e-control-wrapper .e-input-group-icon{
            color:white;
        }
        .e-inplaceeditor {
            /* display: inline-block; */
            position: relative;
            width: auto;
            font-size: 1rem;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            resize: horizontal;
        }

        .e-inplaceeditor-tip.e-tooltip-wrap .e-tip-content .e-editable-title + .e-editable-wrapper {
            background: #1c86c8;
        }

        .btnHover{
            color:white !important;
            border-color:white !important;
        }
    </style>
</head>
<body style="overflow: hidden; ">
    <div class="stackblitz-container material">
        <div class="control-section">

            <!-- sample level element  -->
            <div id="wrapper">

                <!--header-section  declaration -->
                <div class="main-header" id="header-section">
                    <ul class="header-list" style="height:36px;">
                        <li class="float-left header-style icon-menu" id="hamburger" style=" padding: 0; margin-left: 12px;"></li>
                        <li class="float-left header-style" style="width: 15%;padding: 0;" id="fileNameHolder">
                            <div id='inplace_editor'></div>
                        </li>
                        <span class="menuDrag">

                        </span>
                        <span style="display: none;" id="addWitem">
                            <li class="header-style float-right support border-left" style="display:@HideElements;color: white;min-width: 156px;">
                                <b>
                                    <select id="projects" style="color:inherit">
                                        @foreach (var project in Projects)
                                        {
                                            <option value="@project.Id">@project.ProjectName</option>
                                        }
                                    </select>
                                </b>
                            </li>
                            <li class="header-style float-right support border-left" style="display:@HideElements;color: white;min-width: 156px;">
                                <b id="wItems">
                                    <select id="workItems" style="color:inherit">
                                        @foreach (var workItem in WorkItems)
                                        {
                                            <option value="@workItem.Id">@workItem.Title</option>
                                        }
                                    </select>
                                </b>
                            </li>
                        </span>
                        <li class="header-style float-right support border-left" style="padding:0;" id="addWitemBtn"><button type="button" id="Persons" class="btn btn-primary e-control e-btn e-lib e-outline e-primary btnHover" style="margin-top:2px;" data-ripple="true" onclick="AssociateWorkItem()">Add to work item</button> </li>

                        <li class="header-style float-right support border-left" onclick="InitScreen()" style="background-color: #f19f08;"><b><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" style="width:20px;height:20px;"><path fill="white" d="M12.83,13.45a1,1,0,0,0-1.66,0l-4,6a1,1,0,0,0,0,1A1,1,0,0,0,8,21h8a1,1,0,0,0,.88-.53,1,1,0,0,0-.05-1ZM9.87,19,12,15.8,14.13,19ZM19,3H5A3,3,0,0,0,2,6v9a3,3,0,0,0,3,3h.85a1,1,0,1,0,0-2H5a1,1,0,0,1-1-1V6A1,1,0,0,1,5,5H19a1,1,0,0,1,1,1v9a1,1,0,0,1-1,1h-.85a1,1,0,0,0,0,2H19a3,3,0,0,0,3-3V6A3,3,0,0,0,19,3Z" /></svg></b></li>
                        <li class="header-style float-right support border-left" onclick="SaveChanges()"><b><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" style="width:20px;height:20px;"><path fill="white" d="M20,8.94a1.31,1.31,0,0,0-.06-.27l0-.09a1.07,1.07,0,0,0-.19-.28h0l-6-6h0a1.07,1.07,0,0,0-.28-.19.32.32,0,0,0-.09,0A.88.88,0,0,0,13.05,2H7A3,3,0,0,0,4,5V19a3,3,0,0,0,3,3H17a3,3,0,0,0,3-3V9S20,9,20,8.94ZM14,5.41,16.59,8H15a1,1,0,0,1-1-1ZM18,19a1,1,0,0,1-1,1H7a1,1,0,0,1-1-1V5A1,1,0,0,1,7,4h5V7a3,3,0,0,0,3,3h3Zm-3.71-6.71L11,15.59l-1.29-1.3a1,1,0,0,0-1.42,1.42l2,2a1,1,0,0,0,1.42,0l4-4a1,1,0,0,0-1.42-1.42Z" /></svg></b></li>
                        <li class="header-style float-right support border-left" onclick="RetunToMenu()"><b><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" style="width:20px;height:20px;"><path fill="white" d="M10,13H3a1,1,0,0,0-1,1v7a1,1,0,0,0,1,1h7a1,1,0,0,0,1-1V14A1,1,0,0,0,10,13ZM9,20H4V15H9ZM21,2H14a1,1,0,0,0-1,1v7a1,1,0,0,0,1,1h7a1,1,0,0,0,1-1V3A1,1,0,0,0,21,2ZM20,9H15V4h5Zm1,4H14a1,1,0,0,0-1,1v7a1,1,0,0,0,1,1h7a1,1,0,0,0,1-1V14A1,1,0,0,0,21,13Zm-1,7H15V15h5ZM10,2H3A1,1,0,0,0,2,3v7a1,1,0,0,0,1,1h7a1,1,0,0,0,1-1V3A1,1,0,0,0,10,2ZM9,9H4V4H9Z" /></svg></b></li>
                        <li class="header-style float-right support border-left MenuIcon MenuItem" onclick="Minimize()"><b><i class="fa fa-window-minimize MenuIcon" aria-hidden="true"></i></b></li>
                        <li class="header-style float-right support border-left MenuIcon MenuItem" onclick="FullScreen()"><b><i class="fa fa-window-maximize MenuIcon" aria-hidden="true"></i></b></li>
                        <li class="header-style float-right support border-left MenuIcon MenuItem" onclick="KillWindow()"><b><i class="fa fa-times MenuIcon" aria-hidden="true"></i></b></li>
                    </ul>
                </div>
                <!-- end of header-section -->
                <div id="PlatformElement">
                    <!-- sidebar element declaration -->
                    <aside id="sidebar-treeview" style="overflow-x:hidden;">
                        <div class="main-menu">
                            <div class="table-content" style="padding:0;">
                                @*//   class="IconContainer drag-drop" id="yes-drop"*@
                                @foreach (var widget in Widgets)
                                {
                    <div class="IconContainer">
                        <i class="fa @widget.Icon icon" aria-hidden="true" onclick="GenerateWidget('fa @widget.Icon icon','@widget.ComponentName')"></i>

                        <p class="widgetText">
                            @widget.DisplayName
                        </p>
                    </div>}


                            </div>
                        </div>
                    </aside>

                    <div class="main-content" id="main-text" style="min-height: 96vh; width: 99.9%; padding:0px;margin:0px;">
                        <div class="sidebar-content dropzone scroll-container" id="outer-dropzone" style="padding: 0px; margin: 0px; min-height: 100vh;">
                            @RenderBody()
                        </div>
                    </div>

                    @*Declare Notification Pop Up, used for error handling and message subscriptions*@
                    <div class="col-lg-12 control-section toast-type-section">
                        <div class="e-sample-resize-container">
                            <div id="toast_type">
                            </div>
                            <div id="toast_types">
                                <div>

                                </div>

                            </div>
                        </div>
                    </div>
                    @*End INotify declaration*@
                </div>
                <div id="SlidingElement">

                </div>

            </div>


        </div>

    </div>

    <script>
        var project = "0";
        var workItem = "0";
        // initialize ComboBox component
        var projectsList = new ej.dropdowns.ComboBox({
            // set the height of the popup element
            popupHeight: '230px',
            // set the index value to select an item based on index at initial rendering
            index: 0,
            // set the placeholder to ComboBox input element
            placeholder: 'Select a project',
            // bind the change event
            change: ProjectSelected
        });
        projectsList.appendTo('#projects');
        // call the change event's function after initialized the component.

        function ProjectSelected(args) {
            debugger
            project = args.itemData.value;
            var currentDto = {
                Id: project
            }

            $.ajax({
                method: "POST",
                contentType: "application/json",
                url: "/Dashboard/GetWorkItemsForProject",
                data: JSON.stringify(currentDto)
            }).done(function (msg) {
                var res = `<select id="workItems" style="color:inherit">`
                debugger
                for (var item in msg) {
                    var currentWorkItem = msg[item];
                    res += `<option value="` + currentWorkItem.id + `">` + currentWorkItem.title + `</option>`;
                }
                res += `</select>`;
                $("#wItems").html(res);
                InitWorkItems();
            });
        }

        InitWorkItems();

        function InitWorkItems() {
            // initialize ComboBox component
            var workItems = new ej.dropdowns.ComboBox({
                // set the height of the popup element
                popupHeight: '230px',
                // set the index value to select an item based on index at initial rendering
                index: 0,
                // set the placeholder to ComboBox input element
                placeholder: 'Select a work item',
                // bind the change event
                change: WorkItemsSelected
            });
            workItems.appendTo('#workItems');
        // call the change event's function after initialized the component.
        }

        function WorkItemsSelected(args) {
            workItem = args.itemData.value;
        }

        function RetunToMenu() {
            window.location.href = "/Home";
        }

        function GetProjectId() {
            return project;
        }

        function GetWorkItemId() {
            return workItem;
        }

        function AssociateWorkItem() {
            document.getElementById("addWitem").style.setProperty("display", "inherit");
            $("#addWitemBtn").hide();
        }

    </script>
    <script src="~/js/MenuApi.js"></script>
    <script src="~/js/Layout.js"></script>
    <script src="~/js/INotify.js"></script>
    <script src="~/js/DragDrop.js"></script>
    <script src="~/js/RuntimeCompiler.js"></script>
    <script src="~/js/htmltocanvas.js"></script>

    <script src="~/js/dialog.js"></script>

</body>
</html>



